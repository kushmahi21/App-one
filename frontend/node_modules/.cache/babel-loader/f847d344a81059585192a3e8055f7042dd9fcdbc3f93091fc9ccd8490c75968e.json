{"ast":null,"code":"import axios from'axios';// const API_URL = 'http://localhost:5000/posts';\nconst API_URL='https://app-one-cmcb.onrender.com/posts';export const postService={// Get all posts\ngetAllPosts:async()=>{try{const response=await axios.get(API_URL);return response.data;}catch(error){console.error('Error fetching posts:',error);throw error;}},// Create a new post\ncreatePost:async postData=>{try{const formData=new FormData();formData.append('title',postData.title);formData.append('content',postData.content);if(postData.image){formData.append('image',postData.image);}const response=await axios.post(API_URL,formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){console.error('Error creating post:',error);throw error;}},// Update a post\nupdatePost:async(id,postData)=>{try{const formData=new FormData();formData.append('title',postData.title);formData.append('content',postData.content);if(postData.image){formData.append('image',postData.image);}const response=await axios.put(\"\".concat(API_URL,\"/\").concat(id),formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){console.error('Error updating post:',error);throw error;}},// Get a single post by ID\ngetPostById:async id=>{try{const response=await axios.get(\"\".concat(API_URL,\"/\").concat(id));return response.data;}catch(error){console.error('Error fetching post:',error);throw error;}},// Delete a post\ndeletePost:async id=>{try{await axios.delete(\"\".concat(API_URL,\"/\").concat(id));}catch(error){console.error('Error deleting post:',error);throw error;}}};","map":{"version":3,"names":["axios","API_URL","postService","getAllPosts","response","get","data","error","console","createPost","postData","formData","FormData","append","title","content","image","post","headers","updatePost","id","put","concat","getPostById","deletePost","delete"],"sources":["D:/Wordpress/posts-app/posts-app/frontend/src/services/postService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// const API_URL = 'http://localhost:5000/posts';\r\nconst API_URL ='https://app-one-cmcb.onrender.com/posts';\r\n\r\nexport const postService = {\r\n  // Get all posts\r\n  getAllPosts: async () => {\r\n    try {\r\n      const response = await axios.get(API_URL);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Create a new post\r\n  createPost: async (postData) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title', postData.title);\r\n      formData.append('content', postData.content);\r\n      if (postData.image) {\r\n        formData.append('image', postData.image);\r\n      }\r\n\r\n      const response = await axios.post(API_URL, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating post:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update a post\r\n  updatePost: async (id, postData) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title', postData.title);\r\n      formData.append('content', postData.content);\r\n      if (postData.image) {\r\n        formData.append('image', postData.image);\r\n      }\r\n\r\n      const response = await axios.put(`${API_URL}/${id}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating post:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get a single post by ID\r\n  getPostById: async (id) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching post:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete a post\r\n  deletePost: async (id) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/${id}`);\r\n    } catch (error) {\r\n      console.error('Error deleting post:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}