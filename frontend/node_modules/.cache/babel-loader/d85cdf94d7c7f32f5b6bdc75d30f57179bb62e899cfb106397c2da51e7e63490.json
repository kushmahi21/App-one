{"ast":null,"code":"import axios from 'axios';\n\n// const API_URL = 'http://localhost:5000/posts';\nconst API_URL = 'https://app-one-cmcb.onrender.com';\nexport const postService = {\n  // Get all posts\n  getAllPosts: async () => {\n    try {\n      const response = await axios.get(API_URL);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n      throw error;\n    }\n  },\n  // Create a new post\n  createPost: async postData => {\n    try {\n      const formData = new FormData();\n      formData.append('title', postData.title);\n      formData.append('content', postData.content);\n      if (postData.image) {\n        formData.append('image', postData.image);\n      }\n      const response = await axios.post(API_URL, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error creating post:', error);\n      throw error;\n    }\n  },\n  // Update a post\n  updatePost: async (id, postData) => {\n    try {\n      const formData = new FormData();\n      formData.append('title', postData.title);\n      formData.append('content', postData.content);\n      if (postData.image) {\n        formData.append('image', postData.image);\n      }\n      const response = await axios.put(`${API_URL}/${id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error updating post:', error);\n      throw error;\n    }\n  },\n  // Get a single post by ID\n  getPostById: async id => {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching post:', error);\n      throw error;\n    }\n  },\n  // Delete a post\n  deletePost: async id => {\n    try {\n      await axios.delete(`${API_URL}/${id}`);\n    } catch (error) {\n      console.error('Error deleting post:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","postService","getAllPosts","response","get","data","error","console","createPost","postData","formData","FormData","append","title","content","image","post","headers","updatePost","id","put","getPostById","deletePost","delete"],"sources":["D:/Wordpress/posts-app/posts-app/frontend/src/services/postService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// const API_URL = 'http://localhost:5000/posts';\r\nconst API_URL ='https://app-one-cmcb.onrender.com';\r\n\r\nexport const postService = {\r\n  // Get all posts\r\n  getAllPosts: async () => {\r\n    try {\r\n      const response = await axios.get(API_URL);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Create a new post\r\n  createPost: async (postData) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title', postData.title);\r\n      formData.append('content', postData.content);\r\n      if (postData.image) {\r\n        formData.append('image', postData.image);\r\n      }\r\n\r\n      const response = await axios.post(API_URL, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating post:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Update a post\r\n  updatePost: async (id, postData) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title', postData.title);\r\n      formData.append('content', postData.content);\r\n      if (postData.image) {\r\n        formData.append('image', postData.image);\r\n      }\r\n\r\n      const response = await axios.put(`${API_URL}/${id}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error updating post:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get a single post by ID\r\n  getPostById: async (id) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching post:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Delete a post\r\n  deletePost: async (id) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/${id}`);\r\n    } catch (error) {\r\n      console.error('Error deleting post:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}